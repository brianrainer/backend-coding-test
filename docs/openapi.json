{
  "openapi": "3.0.1",

  "info": {
    "title": "Xendit Rides",
    "version": "1.0.0",
    "description": "Rides management API"
  }, 

  "servers": [
    {
      "url": "http://localhost:8010/",
      "description": "Local server"
    }
  ],

  "tags": [
    {
      "name": "rides",
      "description": "Rides CRUD operations"
    }
  ],

  "paths": {
    "/health": {
      "get": {
        "description": "Returns system health check.",
        "parameters": [],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Healthy",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },

    "/rides": {
      "get": {
        "tags": ["rides"],
        "description": "Get all rides from system",
        "operationId": "getRideList",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of all rides.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RidesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Rides Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Could not find rides",
                  "internal_code": "RIDES_NOT_FOUND"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["rides"],
        "description": "Create a new ride.",
        "operationId": "createRide",
        "requestBody": {
          "description": "Add a new ride request parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RidesRequest"
              },
              "example": {
                "start_lat": -90.0,
                "start_long": -180.0,
                "end_lat": 90.0,
                "end_long": 180.0,
                "rider_name": "Rider",
                "driver_name": "Driver",
                "driver_vehicle": "Car"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new ride.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RidesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Rides Not Found Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Could not find any rides",
                  "internal_code": "RIDES_NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Server Error",
                  "internal_code": "SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },

    "/rides/{id}": {
      "get": {
        "tags": ["rides"],
        "description": "Get rides by id number",
        "operationId": "getRide",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/ridesId"
            },
            "required": true,
            "description": "Ride unique id"
          }

        ],
        "responses": {
          "200": {
            "description": "Found ride with the id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RidesResponse"
                },
                "example": {
                  "rideId": 1,
                  "startLat": -90.0,
                  "startLong": -180.0,
                  "endLat": 90.0,
                  "endLong": 180.0,
                  "riderName": "Rider",
                  "driverName": "Driver",
                  "driverVehicle": "Car",
                  "created": "2020-12-12 20:12:12"
                }
              }
            }
          },
          "404": {
            "description": "Ride Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Could not found ride with that id",
                  "internal_code": "RIDE_NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Server Error",
                  "internal_code": "SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "ridesId": {
        "type": "integer",
        "description": "Rides identification number.",
        "example": 1234
      },
      "startLong": {
        "type": "number",
        "format": "decimal",
        "description": "Rides starting longitude position.",
        "minimum": -180.0,
        "maximum": 180.0,
        "example": -178.912
      },
      "endLong": {
        "type": "number",
        "format": "decimal",
        "description": "Rides destination longitude position.",
        "minimum": -180.0,
        "maximum": 180.0,
        "example": 123.456
      },
      "startLat": {
        "type": "number",
        "format": "decimal",
        "description": "Rides starting latitude position.",
        "minimum": -90.0,
        "maximum": 90.0,
        "example": -89.123
      },
      "endLat": {
        "type": "number",
        "format": "decimal",
        "description": "Rides destination latitude position.",
        "minimum": -90.0,
        "maximum": 90.0,
        "example": 78.123
      },
      "riderName": {
        "type": "string",
        "description": "Name of the person who use the ride service.",
        "minLength": 1,
        "example": "Alice"
      },
      "driverName": {
        "type": "string",
        "description": "Name of the driver in the ride.",
        "minLength": 1,
        "example": "Bob"
      },
      "driverVehicle": {
        "type": "string",
        "description": "Name of vehicle driven by driver.",
        "minLength": 1,
        "example": "Toyota Avanza"
      },
      "RidesRequest": {
        "type": "object",
        "properties": {
          "start_lat": {
            "$ref": "#/components/schemas/startLat"
          },
          "start_long": {
            "$ref": "#/components/schemas/startLong"
          },
          "end_lat": {
            "$ref": "#/components/schemas/endLat"
          },
          "end_long": {
            "$ref": "#/components/schemas/endLong"
          },
          "rider_name": {
            "$ref": "#/components/schemas/riderName"
          },
          "driver_name": {
            "$ref": "#/components/schemas/driverName"
          },
          "driver_vehicle": {
            "$ref": "#/components/schemas/driverVehicle"
          }
        }
      },
      "RidesResponse": {
        "type": "object",
        "properties": {
          "rideId" : {
            "$ref": "#/components/schemas/ridesId"
          },
          "startLat": {
            "$ref": "#/components/schemas/startLat"
          },
          "startLong": {
            "$ref": "#/components/schemas/startLong"
          },
          "endLat": {
            "$ref": "#/components/schemas/endLat"
          },
          "endLong": {
            "$ref": "#/components/schemas/endLong"
          },
          "riderName": {
            "$ref": "#/components/schemas/riderName"
          },
          "driverName": {
            "$ref": "#/components/schemas/driverName"
          },
          "driverVehicle": {
            "$ref": "#/components/schemas/driverVehicle"
          },
          "created": {
            "description": "Date and time when the rides created.",
            "type": "string",
            "format": "date-time",
            "example": "2020-12-12 20:12:12"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message to be displayed."
          },
          "internal_code": {
            "type": "string",
            "description": "Internal error code for debugging."
          }
        }
      }
    }
  }

}